{"ast":null,"code":"import _objectSpread from \"/Users/deepaligarg/Documents/ADVANCED WEB DEVELOPER BOOTCAMP/Full-Stack-MERN-TO-DO/reactTodo/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/deepaligarg/Documents/ADVANCED WEB DEVELOPER BOOTCAMP/Full-Stack-MERN-TO-DO/reactTodo/src/TodoList.js\";\nimport React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport * as apiCalls from './api';\n\nclass TodoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.addTodo = this.addTodo.bind(this);\n  }\n\n  componentWillMount() {\n    this.loadTodos();\n  }\n\n  async loadTodos() {\n    let todos = await apiCalls.getTodos();\n    this.setState({\n      todos\n    });\n  }\n\n  async addTodo(val) {\n    let newTodo = await apiCalls.createTodo(val);\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    });\n  }\n\n  async deleteTodo(id) {\n    await apiCalls.removeTodo(id);\n    const todos = this.state.todos.filter(todo => todo._id !== id);\n    this.setState({\n      todos: todos\n    });\n  }\n\n  async toggleTodo(todo) {\n    let updatedTodo = await apiCalls.updateTodo(todo);\n    const todos = this.state.todos.map(t => t._id === updatedTodo._id ? _objectSpread({}, t, {\n      completed: !t.completed\n    }) : t);\n    this.setState({\n      todos: todos\n    });\n  }\n\n  render() {\n    const todos = this.state.todos.map(t => React.createElement(TodoItem, Object.assign({\n      key: t._id\n    }, t, {\n      onDelete: this.deleteTodo.bind(this, t._id) //must be bound here and not on top since id has to be passed in\n      ,\n      onToggle: this.toggleTodo.bind(this, t),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"todo \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"list\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"A MERN(MongoDB, Express, React, Node.js) full stack app\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Designed and Maintained by deepaligarg1001@gmail.com\"), React.createElement(TodoForm, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, todos));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/Users/deepaligarg/Documents/ADVANCED WEB DEVELOPER BOOTCAMP/Full-Stack-MERN-TO-DO/reactTodo/src/TodoList.js"],"names":["React","Component","TodoItem","TodoForm","apiCalls","TodoList","constructor","props","state","todos","addTodo","bind","componentWillMount","loadTodos","getTodos","setState","val","newTodo","createTodo","deleteTodo","id","removeTodo","filter","todo","_id","toggleTodo","updatedTodo","updateTodo","map","t","completed","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport * as apiCalls from './api';\n\nclass TodoList extends Component{\n  constructor(props) {\n    super(props);\n    this.state= {\n      todos:[]\n    }\n    this.addTodo = this.addTodo.bind(this);\n  }\n  componentWillMount() {\n    this.loadTodos();\n  }\n\n  async loadTodos() {\n    let todos = await apiCalls.getTodos();\n    this.setState({todos});\n  }\n  \n  async addTodo(val) {\n    let newTodo = await apiCalls.createTodo(val);\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    })    \n  }\n\n  async deleteTodo(id) {\n    await apiCalls.removeTodo(id);\n    const todos = this.state.todos.filter(todo => todo._id !== id);\n    this.setState({\n        todos: todos\n    });\n  }\n\n  async toggleTodo(todo) {\n    let updatedTodo = await apiCalls.updateTodo(todo);\n    const todos = this.state.todos.map(t => \n      (t._id === updatedTodo._id)\n      ? {...t, completed: !t.completed}\n      : t\n    );\n    this.setState({\n      todos: todos\n    });\n  }\n\n  render (){\n    const todos = this.state.todos.map(t => (\n      <TodoItem \n        key={t._id}\n        {...t}\n        onDelete={this.deleteTodo.bind(this, t._id)} //must be bound here and not on top since id has to be passed in\n        onToggle={this.toggleTodo.bind(this, t)}\n      />\n    ));\n    return(\n      <div>\n         <h1>todo <span>list</span></h1>\n         <h2>A MERN(MongoDB, Express, React, Node.js) full stack app</h2>\n         <h2>Designed and Maintained by deepaligarg1001@gmail.com</h2>\n         <TodoForm addTodo={this.addTodo}/>\n         <ul>{todos}</ul>        \n       </div>\n    );\n  }\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}