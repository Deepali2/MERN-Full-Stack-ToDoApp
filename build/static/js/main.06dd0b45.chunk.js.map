{"version":3,"sources":["TodoItem.js","TodoForm.js","api.js","TodoList.js","App.js","index.js"],"names":["TodoItem","_ref","name","completed","onDelete","onToggle","doneStyle","textDecoration","color","react_default","a","createElement","style","onClick","TodoForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inputValue","handleChange","bind","assertThisInitialized","keyPress","e","setState","target","value","keyCode","addTodo","className","id","type","placeholder","onChange","onKeyDown","Component","APIURL","getTodos","_getTodos","apply","arguments","_callee","regenerator_default","wrap","_context","prev","next","abrupt","fetch","then","resp","ok","status","json","data","errorMessage","message","stop","createTodo","_x","_createTodo","_callee2","val","_context2","method","headers","Headers","Content-Type","body","JSON","stringify","removeTodo","_x2","_removeTodo","_callee3","deleteUrl","_context3","updateTodo","_x3","_updateTodo","_callee4","todo","updateUrl","_context4","_id","TodoList","todos","loadTodos","apiCalls","newTodo","concat","toConsumableArray","filter","updatedTodo","map","t","objectSpread","_this2","src_TodoItem","assign","key","deleteTodo","toggleTodo","src_TodoForm","App","src_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.06dd0b45.chunk.js","sourcesContent":["import React from 'react';\n\nconst TodoItem = ({name, completed, onDelete, onToggle}) => {\n  const doneStyle = {\n    textDecoration: completed? 'line-through': 'none',\n    color: completed?'#bdc3c7': 'black'\n  }\n  return (\n    <li>\n      <span\n      style={doneStyle}\n      onClick={onToggle}\n      >\n      {name}       \n      </span>\n      <span onClick={onDelete}> X </span>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import React, {Component} from 'react';\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state={inputValue: ''}\n    this.handleChange = this.handleChange.bind(this);\n    this.keyPress = this.keyPress.bind(this);\n  }\n  handleChange(e) {\n  this.setState({inputValue:e.target.value});\n  }\n\n  keyPress(e) {\n    if (e.keyCode === 13) {\n      this.props.addTodo(this.state.inputValue);\n      this.setState({inputValue: ''});\n    }  \n  }\n\n  render() {\n    return (\n      <div className='form'>\n        <input \n          id='todoInput'\n          type='text' \n          placeholder='Insert your task here...'\n          value={this.state.inputValue}\n          onChange={this.handleChange}\n          onKeyDown={this.keyPress}\n        />\n      </div>\n    )\n  }\n}\n\nexport default TodoForm;","const APIURL = '/api/todos/';\n\nexport async function getTodos() {\n  return fetch(APIURL)\n    .then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {     //resp.json will be the error message\n            let err = {errorMessage: data.message};\n            throw err;\n          })\n        } else {\n          let err = {errorMessage: 'Please try again later. Server is not responding'};\n          throw err;\n        }\n      }\n      return resp.json()    \n    })\n}\n\nexport async function createTodo(val) {\n  return fetch(APIURL, {\n    method: 'post', //the default method is get\n    headers: new Headers({\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify({name: val})\n  })\n  .then(resp => {\n    if (!resp.ok) {\n      if (resp.status >= 400 && resp.status < 500) {\n        return resp.json().then(data => {     //resp.json will be the error message\n          let err = {errorMessage: data.message};\n          throw err;\n        })\n      } else {\n        let err = {errorMessage: 'Please try again later. Server is not responding'};\n        throw err;\n      }\n    }\n    return resp.json()    \n  })\n}\n\nexport async function removeTodo(id) {\n  const deleteUrl = APIURL + id;\n  return fetch(deleteUrl, {\n      method: 'delete', //the default method is get\n    })\n    .then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {     //resp.json will be the error message\n            let err = {errorMessage: data.message};\n            throw err;\n          })\n        } else {\n          let err = {errorMessage: 'Please try again later. Server is not responding'};\n          throw err;\n        }\n      }\n      return resp.json()    \n    })\n}\n\nexport async function updateTodo(todo) {\n  const updateUrl = APIURL + todo._id;\n  return fetch(updateUrl, {\n      method: 'put', //the default method is get\n      headers: new Headers({\n        'Content-Type': 'application/json',\n      }),\n      body: JSON.stringify({completed:!todo.completed})\n    })\n    .then(resp => {\n      if (!resp.ok) {\n        if (resp.status >= 400 && resp.status < 500) {\n          return resp.json().then(data => {     //resp.json will be the error message\n            let err = {errorMessage: data.message};\n            throw err;\n          })\n        } else {\n          let err = {errorMessage: 'Please try again later. Server is not responding'};\n          throw err;\n        }\n      }\n      return resp.json()    \n    })\n}","import React, {Component} from 'react';\nimport TodoItem from './TodoItem';\nimport TodoForm from './TodoForm';\nimport * as apiCalls from './api';\n\nclass TodoList extends Component{\n  constructor(props) {\n    super(props);\n    this.state= {\n      todos:[]\n    }\n    this.addTodo = this.addTodo.bind(this);\n  }\n  componentWillMount() {\n    this.loadTodos();\n  }\n\n  async loadTodos() {\n    let todos = await apiCalls.getTodos();\n    this.setState({todos});\n  }\n  \n  async addTodo(val) {\n    let newTodo = await apiCalls.createTodo(val);\n    this.setState({\n      todos: [...this.state.todos, newTodo]\n    })    \n  }\n\n  async deleteTodo(id) {\n    await apiCalls.removeTodo(id);\n    const todos = this.state.todos.filter(todo => todo._id !== id);\n    this.setState({\n        todos: todos\n    });\n  }\n\n  async toggleTodo(todo) {\n    let updatedTodo = await apiCalls.updateTodo(todo);\n    const todos = this.state.todos.map(t => \n      (t._id === updatedTodo._id)\n      ? {...t, completed: !t.completed}\n      : t\n    );\n    this.setState({\n      todos: todos\n    });\n  }\n\n  render (){\n    const todos = this.state.todos.map(t => (\n      <TodoItem \n        key={t._id}\n        {...t}\n        onDelete={this.deleteTodo.bind(this, t._id)} //must be bound here and not on top since id has to be passed in\n        onToggle={this.toggleTodo.bind(this, t)}\n      />\n    ));\n    return(\n      <div>\n         <h1>todo <span>list</span></h1>\n         <h2>A MERN(MongoDB, Express, React, Node.js) full stack app</h2>\n         <p>Designed and Maintained by deepaligarg1001@gmail.com</p>\n         <TodoForm addTodo={this.addTodo}/>\n         <ul>{todos}</ul>        \n       </div>\n    );\n  }\n}\n\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './TodoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}